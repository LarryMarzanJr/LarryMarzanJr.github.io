<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>git - Label - Teknologi Untuk Hidup - by Larry Marzan Jr.</title><link>https://larrymarzanjr.github.io/tags/git/</link><description>git - Label - Teknologi Untuk Hidup - by Larry Marzan Jr.</description><generator>Hugo -- gohugo.io</generator><language>id</language><copyright>joenmarz</copyright><lastBuildDate>Mon, 11 Mar 2024 15:59:52 +0800</lastBuildDate><atom:link href="https://larrymarzanjr.github.io/tags/git/" rel="self" type="application/rss+xml"/><item><title>Clone Repository Dari Commit Tertentu</title><link>https://larrymarzanjr.github.io/reset-repository-dari-commit-tertentu/</link><pubDate>Mon, 11 Mar 2024 15:59:52 +0800</pubDate><author>Larry Marzan Jr.</author><guid>https://larrymarzanjr.github.io/reset-repository-dari-commit-tertentu/</guid><description><![CDATA[Clone Repository Lakukan Clone Repository seperti biasa
1  git clone &lt;nama-repository&gt;   Melihat Commit lewat Git Log Untuk menentukan commit yang akan kita gunakan, kita perlu mengidentifikasi Sha ID dari commit yang akan kita gunakan dari project. Lakukan perintah
1  git log --oneline   Checkout dari Commit Tertentu Setelah mengetahui Sha-ID untuk commit yang rencananya akan kita gunakan, lakukan checkout
1  git checkout &lt;Sha-ID&gt;   Bersihkan File Local yang tidak digunakan (Untracked Files) Setelah checkout dari commit tertentu, biasanya terdapat file atau folder yang seharusnya tidak ada di commit yang kita checkout, atau biasa disebut untracked files.]]></description></item><item><title>Menyimpan PAT Menggunakan Git Credentials</title><link>https://larrymarzanjr.github.io/menyimpan-pat-menggunakan-git-credentials/</link><pubDate>Sat, 24 Dec 2022 13:55:17 +0800</pubDate><author>Larry Marzan Jr.</author><guid>https://larrymarzanjr.github.io/menyimpan-pat-menggunakan-git-credentials/</guid><description>Apa itu Git Credentials? Git credentials berfungsi untuk menyimpan data user dan email bahkan PAT (Personal Access Token) kedalam cache secara lokal dalam PC kita. Hal ini sangat berfungsi pada saat kita melakukan aktivitas mengedit repository (git add, git push, dsb.) agar kita tidak menginput username maupun PAT secara berulang.
Cara Menambahkan Git Credentials Kita perlu membuat file yang akan digunakan sebagai sarana penyimpanan cache, misalnya ~/.my-credentials. Untuk mengaktifkan git credentials jalankan perintah berikut:</description></item><item><title>Git Branch</title><link>https://larrymarzanjr.github.io/2022-02-06-git-branch/</link><pubDate>Mon, 07 Feb 2022 07:50:00 +0800</pubDate><author>Larry Marzan Jr.</author><guid>https://larrymarzanjr.github.io/2022-02-06-git-branch/</guid><description>Biasanya dalam sebuah git repository sudah tersedia 1 branch secara default yaitu master atau main. Namun terkadang kita perlu membuat branch baru untuk beberapa kebutuhan seperti backup project, membuat draft sub-project yang nantinya akan kita gabung (merge) ke branch utama (main), atau mungkin kita sedang membuat project dengan tim kemudian membagi tugas untuk ke masing-masing tim.
Branch Baru (New) Untuk membuat branch gunakan perintah:
1 git branch &amp;lt;nama-branch-baru&amp;gt; Pindah Branch (Checkout) Untuk berpindah branch gunakan perintah:</description></item><item><title>Reset Git Repositori Lokal Mengikuti Repositori Remote</title><link>https://larrymarzanjr.github.io/2020-09-23-reset-repositori-git-lokal-mengikuti-repositori-remote/</link><pubDate>Wed, 23 Sep 2020 18:56:00 +0800</pubDate><author>Larry Marzan Jr.</author><guid>https://larrymarzanjr.github.io/2020-09-23-reset-repositori-git-lokal-mengikuti-repositori-remote/</guid><description><![CDATA[Restore Repositori Katakanlah anda &ldquo;blunder&rdquo; pada mengedit repositori lokal dan ingin meresetnya sesuai Repositori yang tersimpan terakhir di Web anda. Lakukan perintah ini:
1 2  git fetch origin git reset --hard origin/main   Backup Repositori Sebaliknya, katakanlah repositori lokal saat ini ingin anda simpan sementara, atau belum live, maka simpanlah di branch tersendiri sebagai backup. Lakukan perintah ini:
1 2 3  git commit -a -m &#34;komentar anda&#34; git branch &lt;nama_branch_baru&gt; git push origin &lt;nama_branch_baru&gt;   Sehingga contohnya menjadi seperti ini:]]></description></item></channel></rss>